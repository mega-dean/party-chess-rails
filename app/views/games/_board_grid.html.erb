<%
move_targets ||= player.game.board_hash(:hash)
selected_piece ||= nil
currently_moving = player.game.current_color
# Using an empty string because js checks this value, so it has to evaluate to `false`.
moves_allowed = if player.color == currently_moving then 'yes' else '' end
%>

<div id='board-grid'
     class='board-grid'
     data-boards-tall='<%= player.game.boards_tall %>'
     data-boards-wide='<%= player.game.boards_wide %>'
     data-moves-allowed-now='<%= moves_allowed %>'
>
  <%
  seconds_elapsed = Time.now.utc - player.game.last_turn_completed_at
  yellow_light_duration = 5 # TODO maybe vary this based on min_turn_duration
  green_seconds_remaining = (player.game.minimum_turn_duration - yellow_light_duration) - seconds_elapsed
  green_light_timeout = green_seconds_remaining * 1000
  %>
  <div id="header">
    <div id="turn-indicator"
         data-controller="turn-indicator"
         data-turn-indicator-current-color-value="<%= player.game.current_color %>"
         data-turn-indicator-green-light-timeout-value="<%= green_light_timeout %>"
         data-action="refresh:setRedLight@window->turn-indicator#setRedLight"
    >
      <div id="traffic-lights">
        <div id="green-light" class="traffic-light"></div>
        <div id="yellow-light" class="traffic-light"></div>
        <div id="red-light" class="traffic-light"></div>
      </div>
    </div>
    <div id="spawn-pieces"
         data-controller="spawn-piece"
    >
      <div id="points">Points: <%= player.points %></div>
      <% Piece::KINDS.each do |kind| %>
        <% affordable = player.points > Piece.cost(kind) %>
        <div class="spawn-piece-button-container <%= if affordable then 'affordable' else 'not-affordable' end  %>"
             data-spawn-piece-target="button"
             data-kind="<%= kind %>"
        >
          <div>
            <%= image_tag("#{player.color}-#{kind}",
                          class: "spawn-piece-button",
                          data: {
                            kind: kind,
                            action: "click->spawn-piece#clicked",
                            affordable: if affordable then 'yes' else '' end,
            })
            %>
          </div>
          <div class="spawn-piece-cost"><%= Piece.cost(kind) %></div>
        </div>
      <% end %>
    </div>
    <div id="score">Score: <%= player.score %></div>
  </div>

  <% player.game.boards_tall.times do |board_y| %>
    <div class='board-row'>
      <% player.game.boards_wide.times do |board_x| %>
        <%
        pieces_on_board = player.game.pieces_by_board[[board_x, board_y]]
        has_piece_on_board = pieces_on_board.any? { |piece| piece.player.id == player&.id }
        %>

        <div class="board">
          <% 8.times do |y| %>
            <% 8.times do |x| %>
              <% span_class = "#{y%2 == x%2 ? 'light' : 'dark'}-#{has_piece_on_board ? 'revealed' : 'obscured'}" %>
              <span class="square <%= span_class %>">
                <%= player.game.location_to_square({board_x: board_x, board_y: board_y, x: x, y: y}) %>
              </span>
            <% end %>
          <% end %>
          <% if has_piece_on_board %>
            <% pieces_on_board.each do |piece| %>
              <%= render partial: piece, locals: {
                player: player,
                selected_piece: selected_piece,
                board_x: board_x,
                board_y: board_y,
              } %>
            <% end %>
          <% end %>

          <% move_targets[[board_x, board_y]].each do |direction, target_squares| %>
            <% target_squares.each do |target_square| %>
              <div class="move-target"
                   data-controller="move"
                   data-move-direction-value="<%= direction %>"
                   data-move-target-square-value="<%= target_square %>"
                   data-move-selected-piece-id-value="<%= selected_piece&.id %>"
                   data-action="click->move#selectTarget"
                   style="<%= get_translate(player.game, target_square) %>">
              </div>
            <% end %>
          <% end %>

          <% player.pending_moves[[board_x, board_y]].each do |move| %>
            <div class="pending-move" style="<%= get_pending_move_line(move, board_x, board_y) %>"></div>
          <% end %>
        </div>
      <% end %>
      <br />
    </div>
  <% end %>
</div>
